#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct account {
    char email[50];
    char password[50];
    int saldo;
    char appuntamento[50];
};

struct node {
    struct account data;
    struct node* next;
};

struct node* head = NULL;

void crea_account(char email[], char password[]) {
    struct node* new_node = (struct node*)malloc(sizeof(struct node));
    strcpy(new_node->data.email, email);
    strcpy(new_node->data.password, password);
    new_node->data.saldo = 0;
    strcpy(new_node->data.appuntamento, "");
    new_node->next = head;
    head = new_node;
}

void cambio_password(char email[], char password[]) {
    struct node* current = head;
    while (current != NULL) {
        if (strcmp(current->data.email, email) == 0) {
            strcpy(current->data.password, password);
            printf("Password cambiata con successo!\n");
            return;
        }
        current = current->next;
    }
    printf("Email non trovata.\n");
}

void preleva(char email[], int importo) {
    struct node* current = head;
    while (current != NULL) {
        if (strcmp(current->data.email, email) == 0) {
            if (current->data.saldo >= importo) {
                current->data.saldo -= importo;
                printf("Hai prelevato %d euro dal tuo conto.\n", importo);
                return;
            }
            else {
                printf("Saldo insufficiente.\n");
                return;
            }
        }
        current = current->next;
    }
    printf("Email non trovata.\n");
}

void deposita(char email[], int importo) {
    struct node* current = head;
    while (current != NULL) {
        if (strcmp(current->data.email, email) == 0) {
            current->data.saldo += importo;
            printf("Hai depositato %d euro nel tuo conto.\n", importo);
            return;
        }
        current = current->next;
    }
    printf("Email non trovata.\n");
}

void prenota_appuntamento(char email[], char appuntamento[]) {
    struct node* current = head;
    while (current != NULL) {
        if (strcmp(current->data.email, email) == 0) {
            if (strcmp(appuntamento, "10 AM") >= 0 && strcmp(appuntamento, "5 PM") <= 0) {
                strcpy(current->data.appuntamento, appuntamento);
                printf("Appuntamento prenotato con successo!\n");
                return;
            }
            else {
                printf("L'orario dell'appuntamento deve essere compreso tra le 10 AM e le 5 PM.\n");
                return;
            }
        }
        current = current->next;
    }
    printf("Email non trovata.\n");
}

void stampa_menu() {
    printf("Scegli un'azione:\n");
    printf("1. Creazione account\n");
    printf("2. Salva su file\n");
    printf("3. Prenota appuntamento\n");
    printf("4. Deposita\n");
    printf("5. Preleva\n");
    printf("6. Cambio password\n");
    printf("0. Esci\n");
}

int main() {
    int x;
    char continua;

    do {
        stampa_menu();
        scanf("%d", &x);

        switch (x) {
            case 1:
                printf("Hai scelto creazione account.\n");
                break;
            case 2:
                printf("Hai scelto salva su file.\n");
                break;
            case 3:
                printf("Hai scelto prenota appuntamento.\n");
                break;
            case 4:
                printf("Hai scelto deposita.\n");
                break;
            case 5:
                printf("Hai scelto preleva.\n");
                break;
            case 6:
                printf("Hai scelto cambio password.\n");
                break;
            default:
                printf("Scelta non valida.\n");
                break;
        }

        printf("Vuoi continuare? (s/n)\n");
        scanf(" %c", &continua);
    } while (continua == 's' || continua == 'S');

    return 0;
}
